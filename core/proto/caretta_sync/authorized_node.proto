syntax = "proto3";

// The package contain service and messages about node already authorized.
// The authorized node includes not only remote authorized peers but also local node itself.
package caretta_sync;

import "tripod_id.proto";
import "caretta_sync/remote_node.proto";
import "caretta_sync/common.proto";

service AuthorizadNode {
    rpc Info(AuthorizedNodeInfoRequest) returns (AuthorizedNodeInfoResponse);
    rpc InfoStream(stream AuthorizedNodeInfoStreamRequest) returns (stream AuthorizedNodeInfoStreamResponse);
}

message AuthorizedNodeIdentifier {
    oneof identifier {
        tripod_id.Single id = 1;
        caretta_sync.PublicKey public_key = 2;
    }
}

message AuthorizedNodeInfo {
    tripod_id.Single id = 1;
    caretta_sync.PublicKey public_key = 2;
    string note = 3;
}

message AuthorizedNodeInfoRequest {
    AuthorizedNodeIdentifier node = 1;
}
message AuthorizedNodeInfoResponse {
    AuthorizedNodeInfo node_info = 1;
}

message AuthorizedNodeInfoStreamRequest{}

message AuthorizedNodeInfoStreamResponse {
    AuthorizedNodeInfo node_info = 1;
}